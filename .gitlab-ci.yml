image: docker:24.0.5

services:
  - name: docker:24.0.5-dind
    alias: docker

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""             # Disable TLS for DinD
  DOCKER_DRIVER: overlay2
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"

stages:
  - build
  - deploy

before_script:
  - apk add --no-cache curl jq python3 py3-pip
  - pip3 install awscli
  - echo "Logging into AWS ECR..."
  - aws ecr get-login-password --region "$AWS_REGION" | \
    docker login --username AWS --password-stdin "$ECR_REGISTRY"

# -----------------------------
#    Build Backend
# -----------------------------
build-backend:
  stage: build
  script:
    - echo "Building Backend..."
    - docker build -t $ECR_REPO_BACKEND:latest ./Backend
    - docker tag $ECR_REPO_BACKEND:latest $ECR_REPO_BACKEND:$IMAGE_TAG
    - docker push $ECR_REPO_BACKEND:latest
    - docker push $ECR_REPO_BACKEND:$IMAGE_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

# -----------------------------
#    Build Frontend
# -----------------------------
build-frontend:
  stage: build
  script:
    - echo "Building Frontend..."
    - docker build -t $ECR_REPO_FRONTEND:latest ./iinspire-app
    - docker tag $ECR_REPO_FRONTEND:latest $ECR_REPO_FRONTEND:$IMAGE_TAG
    - docker push $ECR_REPO_FRONTEND:latest
    - docker push $ECR_REPO_FRONTEND:$IMAGE_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

# -----------------------------
# Deploy Backend
# -----------------------------
deploy-backend:
  stage: deploy
  script:
    - echo "Updating ECS Backend Service..."
    - TASK_DEF=$(aws ecs describe-task-definition --task-definition $TASK_DEF_BACKEND)
    - NEW_DEF=$(echo $TASK_DEF | jq --arg IMG "$ECR_REPO_BACKEND:$IMAGE_TAG" \
        '.taskDefinition.containerDefinitions[0].image = $IMG | .taskDefinition.containerDefinitions')
    - aws ecs register-task-definition --family $TASK_DEF_BACKEND --container-definitions "$NEW_DEF"
    - aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_BACKEND \
        --region $AWS_REGION --force-new-deployment
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

# -----------------------------
# Deploy Frontend
# -----------------------------
deploy-frontend:
  stage: deploy
  script:
    - echo "Updating ECS Frontend Service..."
    - TASK_DEF=$(aws ecs describe-task-definition --task-definition $TASK_DEF_FRONTEND)
    - NEW_DEF=$(echo $TASK_DEF | jq --arg IMG "$ECR_REPO_FRONTEND:$IMAGE_TAG" \
        '.taskDefinition.containerDefinitions[0].image = $IMG | .taskDefinition.containerDefinitions')
    - aws ecs register-task-definition --family $TASK_DEF_FRONTEND --container-definitions "$NEW_DEF"
    - aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_FRONTEND \
        --region $AWS_REGION --force-new-deployment
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
