stages:
  - build
  - deploy

variables:
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  REGION: $AWS_REGION
  CLUSTER: $ECS_CLUSTER_NAME

# ===============================
# Build Backend with Kaniko
# ===============================
build-backend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/Backend
      --dockerfile $CI_PROJECT_DIR/Backend/Dockerfile
      --destination $ECR_REPO_BACKEND:$IMAGE_TAG
      --destination $ECR_REPO_BACKEND:latest
      --insecure
      --insecure-pull
      --skip-tls-verify
  only:
    changes:
      - Backend/**/*
      - .gitlab-ci.yml

# ===============================
# Build Frontend with Kaniko
# ===============================
build-frontend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/iinspire-app
      --dockerfile $CI_PROJECT_DIR/iinspire-app/Dockerfile
      --destination $ECR_REPO_FRONTEND:$IMAGE_TAG
      --destination $ECR_REPO_FRONTEND:latest
      --insecure
      --insecure-pull
      --skip-tls-verify
  only:
    changes:
      - iinspire-app/**/*
      - .gitlab-ci.yml

# ===============================
# Deploy Backend to ECS
# ===============================
deploy-backend:
  stage: deploy
  image: amazon/aws-cli
  script:
    - aws ecs update-service \
        --cluster "$ECS_CLUSTER_NAME" \
        --service "$ECS_SERVICE_BACKEND" \
        --force-new-deployment \
        --region "$AWS_REGION"
  only:
    refs:
      - master

# ===============================
# Deploy Frontend to ECS
# ===============================
deploy-frontend:
  stage: deploy
  image: amazon/aws-cli
  script:
    - aws ecs update-service \
        --cluster "$ECS_CLUSTER_NAME" \
        --service "$ECS_SERVICE_FRONTEND" \
        --force-new-deployment \
        --region "$AWS_REGION"
  only:
    refs:
      - master
