image: docker:latest

services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: "tcp://docker:2375"

before_script:
  - apk add --no-cache python3 py3-pip
  - pip install awscli
  - eval "$(aws ecr get-login --no-include-email --region "$AWS_REGION")"

build-and-push:
  stage: build
  script:
    - docker build -t "$ECR_REPO_BACKEND:$CI_COMMIT_SHA" ./Backend
    - docker build -t "$ECR_REPO_FRONTEND:$CI_COMMIT_SHA" ./inspire-app
    - docker push "$ECR_REPO_BACKEND:$CI_COMMIT_SHA"
    - docker push "$ECR_REPO_FRONTEND:$CI_COMMIT_SHA"
  only:
    - master

deploy-ecs:
  stage: deploy
  script:
    - docker tag "$ECR_REPO_BACKEND:$CI_COMMIT_SHA" "$ECR_REPO_BACKEND:latest"
    - docker tag "$ECR_REPO_FRONTEND:$CI_COMMIT_SHA" "$ECR_REPO_FRONTEND:latest"
    - docker push "$ECR_REPO_BACKEND:latest"
    - docker push "$ECR_REPO_FRONTEND:latest"
    - |
      aws ecs update-service \
        --cluster "$ECS_CLUSTER_NAME" \
        --service "$ECS_SERVICE_BACKEND" \
        --force-new-deployment \
        --region "$AWS_REGION"
    - |
      aws ecs update-service \
        --cluster "$ECS_CLUSTER_NAME" \
        --service "$ECS_SERVICE_FRONTEND" \
        --force-new-deployment \
        --region "$AWS_REGION"
  only:
    - master
  needs:
    - build-and-push
