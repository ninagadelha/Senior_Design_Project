image: docker:23.0.2

services:
  - name: docker:23.0.2-dind
    alias: docker
    command: ["--tls=false", "--host=tcp://0.0.0.0:2375", "--storage-driver=overlay2"]

stages:
  - build
  - deploy

variables:
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  - apk add --no-cache python3 py3-pip aws-cli
  - >
    aws ecr get-login-password --region "$AWS_REGION" |
    docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

build-backend:
  stage: build
  script:
    - docker build -t "$ECR_REPO_BACKEND:$CI_COMMIT_SHA" ./Backend
    - docker push "$ECR_REPO_BACKEND:$CI_COMMIT_SHA"
  only:
    - master

build-frontend:
  stage: build
  script:
    - docker build -t "$ECR_REPO_FRONTEND:$CI_COMMIT_SHA" ./inspire-app
    - docker push "$ECR_REPO_FRONTEND:$CI_COMMIT_SHA"
  only:
    - master

deploy-backend:
  stage: deploy
  script:
    - docker pull "$ECR_REPO_BACKEND:$CI_COMMIT_SHA"
    - docker tag "$ECR_REPO_BACKEND:$CI_COMMIT_SHA" "$ECR_REPO_BACKEND:latest"
    - docker push "$ECR_REPO_BACKEND:latest"
    - |
      aws ecs update-service \
        --cluster "$BACKEND_ECS_CLUSTER" \
        --service "$BACKEND_ECS_SERVICE" \
        --force-new-deployment \
        --region "$AWS_REGION"
  needs:
    - build-backend
  only:
    - master

deploy-frontend:
  stage: deploy
  script:
    - docker pull "$ECR_REPO_FRONTEND:$CI_COMMIT_SHA"
    - docker tag "$ECR_REPO_FRONTEND:$CI_COMMIT_SHA" "$ECR_REPO_FRONTEND:latest"
    - docker push "$ECR_REPO_FRONTEND:latest"
    - |
      aws ecs update-service \
        --cluster "$FRONTEND_ECS_CLUSTER" \
        --service "$FRONTEND_ECS_SERVICE" \
        --force-new-deployment \
        --region "$AWS_REGION"
  needs:
    - build-frontend
  only:
    - master
