image: alpine:latest

services:
  - name: moby/buildkit:latest
    alias: buildkitd

variables:
  BUILDKIT_HOST: tcp://buildkitd:1234
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"

before_script:
  - apk add --no-cache bash curl jq python3 py3-pip
  - pip3 install awscli
  - curl -LO https://github.com/moby/buildkit/releases/download/v0.12.4/buildctl-linux-amd64
  - chmod +x buildctl-linux-amd64 && mv buildctl-linux-amd64 /usr/local/bin/buildctl
  - aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$ECR_REGISTRY"

# -----------------------------
# Build Backend
# -----------------------------
build-backend:
  stage: build
  script:
    - echo "Building Backend..."
    - buildctl --addr tcp://buildkitd:1234 build \
        --frontend dockerfile.v0 \
        --local context=./Backend \
        --local dockerfile=./Backend \
        --output type=image,name=$ECR_REPO_BACKEND:latest,push=true
    - buildctl --addr tcp://buildkitd:1234 build \
        --frontend dockerfile.v0 \
        --local context=./Backend \
        --local dockerfile=./Backend \
        --output type=image,name=$ECR_REPO_BACKEND:$IMAGE_TAG,push=true
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

# -----------------------------
# Build Frontend
# -----------------------------
build-frontend:
  stage: build
  script:
    - echo "Building Frontend..."
    - buildctl --addr tcp://buildkitd:1234 build \
        --frontend dockerfile.v0 \
        --local context=./iinspire-app \
        --local dockerfile=./iinspire-app \
        --output type=image,name=$ECR_REPO_FRONTEND:latest,push=true
    - buildctl --addr tcp://buildkitd:1234 build \
        --frontend dockerfile.v0 \
        --local context=./iinspire-app \
        --local dockerfile=./iinspire-app \
        --output type=image,name=$ECR_REPO_FRONTEND:$IMAGE_TAG,push=true
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
