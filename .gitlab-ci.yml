stages:
  - build
  - deploy

variables:
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA
  REGION: $AWS_REGION
  CLUSTER: $ECS_CLUSTER_NAME
  ECR_REGISTRY: 471112510011.dkr.ecr.us-east-2.amazonaws.com

# ===============================
# Build Backend with Kaniko
# ===============================
build-backend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/Backend
      --dockerfile $CI_PROJECT_DIR/Backend/Dockerfile
      --destination $ECR_REPO_BACKEND:$IMAGE_TAG
      --destination $ECR_REPO_BACKEND:latest
      --reproducible
      --no-push-cache
      --insecure
      --insecure-pull
      --skip-tls-verify
  only:
    changes:
      - Backend/**/*
      - .gitlab-ci.yml

# ===============================
# Build Frontend with Kaniko
# ===============================
build-frontend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - >
      /kaniko/executor
      --context $CI_PROJECT_DIR/iinspire-app
      --dockerfile $CI_PROJECT_DIR/iinspire-app/Dockerfile
      --destination $ECR_REPO_FRONTEND:$IMAGE_TAG
      --destination $ECR_REPO_FRONTEND:latest
      --reproducible
      --no-push-cache
      --insecure
      --insecure-pull
      --skip-tls-verify
  only:
    changes:
      - iinspire-app/**/*
      - .gitlab-ci.yml

# ===============================
# Deploy Frontend to ECS (with new task definition)
# ===============================
deploy-frontend:
  stage: deploy
  image: amazonlinux:2
  before_script:
    - yum install -y unzip curl jq
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
  script:
    - echo "Fetching current task definition..."
    - |
      TASK_DEF_JSON=$(aws ecs describe-task-definition \
        --task-definition $ECS_TASK_DEF_FRONTEND \
        --region $AWS_REGION)
    - echo "Registering new task definition with updated image..."
    - |
      echo "$TASK_DEF_JSON" | jq \
        --arg IMG "$ECR_REPO_FRONTEND:$IMAGE_TAG" \
        '.taskDefinition |
         {
           family: .family,
           executionRoleArn: .executionRoleArn,
           networkMode: .networkMode,
           containerDefinitions: (.containerDefinitions | map(if .name == "frontend" then .image = $IMG else . end)),
           requiresCompatibilities: .requiresCompatibilities,
           cpu: .cpu,
           memory: .memory
         }' > new-task-def.json
    - |
      NEW_ARN=$(aws ecs register-task-definition \
        --cli-input-json file://new-task-def.json \
        --region $AWS_REGION \
        --query 'taskDefinition.taskDefinitionArn' \
        --output text)
    - echo "Updating service with new task definition..."
    - |
      aws ecs update-service \
        --cluster $ECS_CLUSTER_NAME \
        --service $ECS_SERVICE_FRONTEND \
        --task-definition $NEW_ARN \
        --region $AWS_REGION
  only:
    changes:
      - iinspire-app/**/*
      - .gitlab-ci.yml
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
